{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_PORTFOLIO } from '@/apollo/queries';\nimport withApollo from '@/hoc/withApollo';\nimport { getDataFromTree } from '@apollo/react-ssr';\n\nvar PortfolioDetail = function PortfolioDetail(_ref) {\n  var query = _ref.query;\n\n  var _useQuery = useQuery(GET_PORTFOLIO, {\n    variable: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var portfolio = data && data.portfolio || {};\n  return __jsx(\"div\", {\n    className: \"portfolio-detail\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"jumbotron\"\n  }, __jsx(\"h1\", {\n    className: \"display-3\"\n  }), __jsx(\"p\", {\n    className: \"lead\"\n  }, \" \", portfolio.title, \" \"), __jsx(\"p\", null, __jsx(\"a\", {\n    className: \"btn btn-lg btn-success\",\n    href: portfolio.companyWebsite,\n    role: \"button\"\n  }, portfolio.jobTitle))), __jsx(\"div\", {\n    className: \"row marketing\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"h4\", {\n    className: \"title\"\n  }, \" Location \"), __jsx(\"p\", {\n    className: \"text\"\n  }, \" \", portfolio.location, \" \"), __jsx(\"h4\", {\n    className: \"title\"\n  }, \" Start date \"), __jsx(\"p\", {\n    className: \"text\"\n  }, portfolio.startDate)), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"h4\", {\n    className: \"title\"\n  }, \"Days\"), __jsx(\"p\", {\n    className: \"text\"\n  }, \"44\"), __jsx(\"h4\", {\n    className: \"title\"\n  }, \"End Date\"), __jsx(\"p\", {\n    className: \"text\"\n  }, \" \", portfolio.endDate, \" \")), __jsx(\"div\", {\n    className: \"col-md-12\"\n  }, __jsx(\"hr\", null), __jsx(\"h4\", {\n    className: \"title\"\n  }, \"Description\"), __jsx(\"p\", null, portfolio.description, \" \")))));\n};\n\nPortfolioDetail.getInitialProps = function _callee(_ref2) {\n  var query;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          return _context.abrupt(\"return\", {\n            query: query\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default withApollo(PortfolioDetail, {\n  getDataFromTree: getDataFromTree\n});","map":{"version":3,"sources":["C:/Users/meir/Documents/webDeveloppement/filip-udemy-nextjs/pages/portfolios/[id].js"],"names":["useQuery","GET_PORTFOLIO","withApollo","getDataFromTree","PortfolioDetail","query","variable","id","data","loading","error","portfolio","title","companyWebsite","jobTitle","location","startDate","endDate","description","getInitialProps"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,eAAT,QAAgC,mBAAhC;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAAA,kBACJL,QAAQ,CAACC,aAAD,EAAgB;AAACK,IAAAA,QAAQ,EAAG;AAACC,MAAAA,EAAE,EAAEF,KAAK,CAACE;AAAX;AAAZ,GAAhB,CADJ;AAAA,MAC5BC,IAD4B,aAC5BA,IAD4B;AAAA,MACvBC,OADuB,aACvBA,OADuB;AAAA,MACdC,KADc,aACdA,KADc;;AAEnC,MAAMC,SAAS,GAAGH,IAAI,IAAIA,IAAI,CAACG,SAAb,IAA0B,EAA5C;AACA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACF;AAAK,IAAA,SAAS,EAAC;AAAf,KAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAI,IAAA,SAAS,EAAC;AAAd,IADF,EAEE;AAAG,IAAA,SAAS,EAAC;AAAb,UAAsBA,SAAS,CAACC,KAAhC,MAFF,EAGE,iBACE;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAsC,IAAA,IAAI,EAAED,SAAS,CAACE,cAAtD;AAAsE,IAAA,IAAI,EAAC;AAA3E,KACCF,SAAS,CAACG,QADX,CADF,CAHF,CAFF,EAWE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAI,IAAA,SAAS,EAAC;AAAd,kBADF,EAEE;AAAG,IAAA,SAAS,EAAC;AAAb,UAAsBH,SAAS,CAACI,QAAhC,MAFF,EAIE;AAAI,IAAA,SAAS,EAAC;AAAd,oBAJF,EAKE;AAAG,IAAA,SAAS,EAAC;AAAb,KAAqBJ,SAAS,CAACK,SAA/B,CALF,CADF,EASE;AAAK,IAAA,SAAS,EAAC;AAAf,KAEE;AAAI,IAAA,SAAS,EAAC;AAAd,YAFF,EAGE;AAAG,IAAA,SAAS,EAAC;AAAb,UAHF,EAKE;AAAI,IAAA,SAAS,EAAC;AAAd,gBALF,EAME;AAAG,IAAA,SAAS,EAAC;AAAb,UAAsBL,SAAS,CAACM,OAAhC,MANF,CATF,EAiBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,iBADF,EAEE;AAAI,IAAA,SAAS,EAAC;AAAd,mBAFF,EAGI,iBAAIN,SAAS,CAACO,WAAd,MAHJ,CAjBF,CAXF,CADE,CADF;AAuCD,CA1CD;;AA4CAd,eAAe,CAACe,eAAhB,GAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQd,UAAAA,KAAR,SAAQA,KAAR;AAAA,2CACzB;AAACA,YAAAA,KAAK,EAALA;AAAD,WADyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlC;;AAMA,eAAeH,UAAU,CAACE,eAAD,EAAkB;AAACD,EAAAA,eAAe,EAAfA;AAAD,CAAlB,CAAzB","sourcesContent":["import { useQuery } from '@apollo/react-hooks';\r\nimport { GET_PORTFOLIO } from '@/apollo/queries';\r\nimport withApollo from '@/hoc/withApollo';\r\nimport { getDataFromTree } from '@apollo/react-ssr';\r\n\r\n\r\nconst PortfolioDetail = ({query}) => {\r\n  const {data,loading, error}  = useQuery(GET_PORTFOLIO, {variable : {id: query.id}});\r\n  const portfolio = data && data.portfolio || {};\r\n  return (\r\n    <div className=\"portfolio-detail\">\r\n  <div className=\"container\">\r\n\r\n    <div className=\"jumbotron\">\r\n      <h1 className=\"display-3\"></h1>\r\n      <p className=\"lead\"> {portfolio.title} </p>\r\n      <p>\r\n        <a className=\"btn btn-lg btn-success\" href={portfolio.companyWebsite} role=\"button\">\r\n        {portfolio.jobTitle}</a>\r\n        </p>\r\n    </div>\r\n\r\n    <div className=\"row marketing\">\r\n      <div className=\"col-lg-6\">\r\n        <h4 className=\"title\"> Location </h4>\r\n        <p className=\"text\"> {portfolio.location} </p>\r\n\r\n        <h4 className=\"title\"> Start date </h4>\r\n        <p className=\"text\">{portfolio.startDate}</p>\r\n      </div>\r\n\r\n      <div className=\"col-lg-6\">\r\n        {/* TODO: days later... */}\r\n        <h4 className=\"title\">Days</h4>\r\n        <p className=\"text\">44</p>\r\n\r\n        <h4 className=\"title\">End Date</h4>\r\n        <p className=\"text\"> {portfolio.endDate} </p>\r\n      </div>\r\n      <div className=\"col-md-12\">\r\n        <hr />\r\n        <h4 className=\"title\">Description</h4>\r\n          <p>{portfolio.description} </p>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n  )\r\n}\r\n\r\nPortfolioDetail.getInitialProps = async ({query}) => {\r\n  return {query};\r\n}\r\n\r\n\r\n\r\nexport default withApollo(PortfolioDetail, {getDataFromTree});\r\n"]},"metadata":{},"sourceType":"module"}